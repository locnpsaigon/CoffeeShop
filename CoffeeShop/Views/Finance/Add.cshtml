@using CoffeeShop.Models
@model CoffeeShop.Models.FinanceAddViewModel
@{
    ViewBag.Title = "Nhập thu chi";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<div id="page-wrapper">

    <div class="row">
        <div class="col-lg-8">
            <h4 class="page-header form-title">@ViewBag.Title</h4>
        </div>
    </div>
    @using (Html.BeginForm("Add", "Finance", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-8">
                @Html.ValidationSummary(true)
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8">
                <div class="form-group">
                    <div class="col-xs-4">
                        <label class="text-nowrap">Chọn ngày:</label>
                        @Html.TextBoxFor(m => m.Date, new { @id = "datepicker", @class = "form-control text-center", @style = "width:120px;", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.Date, null, new { @class = "help-inline" })
                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>Khoản chi</strong>
                    </div>
                    <div class="panel-body">
                        <div id="payment-rows">
                            @for (int i = 0; i < Model.Payments.Count; i++)
                            {
                                <div class="row form-group">
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.Payments[i].Description, new { @class = "form-control description", @placeholder = "Diễn giải khoản chi", @type = "text" })
                                        @Html.ValidationMessageFor(m => m.Payments[i].Description, null, new { @class = "help-inline" })
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(m => m.Payments[i].Amount, new { @class = "form-control number-input text-right amount", @placeholder = "Khoản chi", @type = "text" })
                                        @Html.ValidationMessageFor(m => m.Payments[i].Amount, null, new { @class = "help-inline" })
                                    </div>
                                    @if (i > 0)
                                    {
                                        <div class="col-xs-2">
                                            <a href="#" class="btn btn-danger btn-sm remove-pm-row">Xóa</a>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <div class="col-xs-6">
                                <a href="#" class="btn btn-success btn-sm add-pm-row">Thêm</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-8">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <strong>Khoản thu</strong>
                    </div>
                    <div class="panel-body">
                        <div id="receipt-rows">
                            @for (int i = 0; i < Model.Receipts.Count; i++)
                            {
                                <div class="form-group">
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(model => model.Receipts[i].Description, new { @class = "form-control", @placeholder = "Diễn giải khoản thu", @type = "text" })
                                        @Html.ValidationMessageFor(model => model.Receipts[i].Description, null, new { @class = "help-inline" })
                                    </div>
                                    <div class="col-xs-4">
                                        @Html.TextBoxFor(model => model.Receipts[i].Amount, new { @class = "form-control text-right number-input", @placeholder = "Tiền thu", @type = "text" })
                                        @Html.ValidationMessageFor(model => model.Receipts[i].Amount, null, new { @class = "help-inline" })
                                    </div>
                                    @if (i > 0)
                                    {
                                        <div class="col-xs-2">
                                            <a href="#" class="btn btn-success btn-sm remove-rc-row">Xóa</a>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <div class="col-xs-6">
                                <a href="#" class="btn btn-primary btn-sm add-rc-row">Thêm</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-12">
                <input id="btn-submit" type="submit" value="Lưu thông tin" class="btn btn-success btn-sm" style="width:128px;" />
                <input id="btn-reset" type="reset" value="Nhập lại" class="btn btn-success btn-sm" style="width:128px;" />
            </div>
        </div>
    }
    <br />
    <br />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerynum")

    <script>

        var updatePaymentRowNames = function () {
            var paymentRows = $('#payment-rows > .form-group');
            $.each(paymentRows, function (index, value) {
                $(this).find('.description').attr('name', 'Payments[' + index + '].Description')
                $(this).find('.amount').attr('name', 'Payments[' + index + '].Amount');
            })
        }

        var updateReceiptRowNames = function () {
            var receiptRows = $('#receipt-rows > .form-group');
            $.each(receiptRows, function (index, value) {
                $(this).find('.description').attr('name', 'Receipts[' + index + '].Description')
                $(this).find('.amount').attr('name', 'Receipts[' + index + '].Amount');
            })
        }

        // Setup datepicker
        $('#datepicker').datepicker({ format: 'dd/mm/yyyy', todayHighlight: true });
        $('#datepicker').on('changeDate', function (ev) { $(this).datepicker('hide') });
        $('#datepicker').datepicker('setDate', new Date());
        $('#datepicker').datepicker('update');

        // Setup number input controls
        $(document).ready(new function () {

            $('#payment-rows').on('focus', '.number-input', function () {
                $(this).number(true, 0);
            })

            $('#receipt-rows').on('focus', '.number-input', function () {
                $(this).number(true, 0);
            })

        });

        // Add payment row
        $('.add-pm-row').on('click', function () {

            var size = $('#payment-rows > .form-group').size();

            var row = '<div class="form-group">';
            row += '  <div class="col-xs-6">';
            row += '      <input class="form-control description" data-val="true" data-val-required="*" id="Payments_' + size + '__Description" name="Payments[' + size + '].Description" placeholder="Diễn giải khoản chi" type="text" value="">';
            row += '      <span class="field-validation-valid help-inline" data-valmsg-for="Payments[' + size + '].Description" data-valmsg-replace="true"></span>';
            row += '  </div>';
            row += '  <div class="col-xs-4">';
            row += '      <input class="form-control number-input text-right amount" data-val="true" data-val-number="The field Amount must be a number." data-val-required="*" id="Payments_' + size + '__Amount" name="Payments[' + size + '].Amount" placeholder="Khoản chi" type="text" value="0">';
            row += '      <span class="field-validation-valid help-inline" data-valmsg-for="Payments[' + size + '].Amount" data-valmsg-replace="true"></span>';
            row += '  </div>';
            row += '  <div class="col-xs-2">';
            row += '      <a href="#" class="btn btn-danger btn-sm remove-pm-row">Xóa</a>';
            row += '  </div">';
            row += '</div>';
            $('#payment-rows').append(row);

            return false;
        });

        // Add receipt row
        $('.add-rc-row').on('click', function () {

            var size = $('#receipt-rows > .form-group').size();

            var row = '<div class="form-group">';
            row += '  <div class="col-xs-6">';
            row += '      <input class="form-control description" data-val="true" data-val-required="*" id="Receipts_' + size + '__Description" name="Receipts[' + size + '].Description" placeholder="Diễn giải khoản thu" type="text" value="">';
            row += '      <span class="field-validation-valid help-inline" data-valmsg-for="Receipts_[' + size + '].Description" data-valmsg-replace="true"></span>';
            row += '  </div>';
            row += '  <div class="col-xs-4">';
            row += '      <input class="form-control number-input text-right amount" data-val="true" data-val-number="The field Amount must be a number." data-val-required="*" id="Receipts_' + size + '__Amount" name="Receipts[' + size + '].Amount" placeholder="Khoản thu" type="text" value="0">';
            row += '      <span class="field-validation-valid help-inline" data-valmsg-for="Receipts_[' + size + '].Amount" data-valmsg-replace="true"></span>';
            row += '  </div>';
            row += '  <div class="col-xs-2">';
            row += '      <a href="#" class="btn btn-danger btn-sm remove-rc-row">Xóa</a>';
            row += '  </div">';
            row += '</div>';
            $('#receipt-rows').append(row);

            return false;
        });

        // Remove payment row
        $('#payment-rows').on('click', '.remove-pm-row', function () {
            $(this).closest('.form-group').remove();
            updatePaymentRowNames()
            return false;
        });

        // Remove receipt row
        $('#receipt-rows').on('click', '.remove-rc-row', function () {
            $(this).closest('.form-group').remove();
            updateReceiptRowNames();
            return false;
        });

        $('#btn-reset').on('click', function (event) {
            event.preventDefault();
            $(this).closest('form').get(0).reset();
        });

        $(document).ready(new function () {
            $("#menu-finance").attr("class", "active");
        });

    </script>
}

